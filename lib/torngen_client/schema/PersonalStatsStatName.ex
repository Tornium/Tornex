defmodule Torngen.Client.Schema.PersonalStatsStatName do
  @moduledoc false

  require Logger

  @behaviour Torngen.Client.Schema

  @type t :: String.t()

  @values [
    "attackswon",
    "attackslost",
    "attacksdraw",
    "attacksassisted",
    "defendswon",
    "defendslost",
    "defendsstalemated",
    "elo",
    "yourunaway",
    "theyrunaway",
    "unarmoredwon",
    "bestkillstreak",
    "attackhits",
    "attackmisses",
    "attackdamage",
    "bestdamage",
    "onehitkills",
    "attackcriticalhits",
    "roundsfired",
    "specialammoused",
    "hollowammoused",
    "tracerammoused",
    "piercingammoused",
    "incendiaryammoused",
    "attacksstealthed",
    "retals",
    "moneymugged",
    "largestmug",
    "itemslooted",
    "highestbeaten",
    "respectforfaction",
    "rankedwarhits",
    "raidhits",
    "territoryjoins",
    "territoryclears",
    "territorytime",
    "jobpointsused",
    "trainsreceived",
    "marketitemsbought",
    "auctionswon",
    "auctionsells",
    "itemssent",
    "trades",
    "cityitemsbought",
    "pointsbought",
    "pointssold",
    "bazaarcustomers",
    "bazaarsales",
    "bazaarprofit",
    "jailed",
    "peoplebusted",
    "failedbusts",
    "peoplebought",
    "peopleboughtspent",
    "hospital",
    "medicalitemsused",
    "bloodwithdrawn",
    "reviveskill",
    "revives",
    "revivesreceived",
    "heavyhits",
    "machinehits",
    "riflehits",
    "smghits",
    "shotgunhits",
    "pistolhits",
    "temphits",
    "piercinghits",
    "slashinghits",
    "clubbinghits",
    "mechanicalhits",
    "h2hhits",
    "mailssent",
    "friendmailssent",
    "factionmailssent",
    "companymailssent",
    "spousemailssent",
    "classifiedadsplaced",
    "personalsplaced",
    "criminaloffensesold",
    "sellillegalgoods",
    "theftold",
    "autotheftcrime",
    "drugdealscrime",
    "computercrime",
    "fraudold",
    "murdercrime",
    "othercrime",
    "organizedcrimes",
    "bountiesplaced",
    "totalbountyspent",
    "bountiescollected",
    "totalbountyreward",
    "bountiesreceived",
    "receivedbountyvalue",
    "cityfinds",
    "dumpfinds",
    "itemsdumped",
    "booksread",
    "boostersused",
    "consumablesused",
    "candyused",
    "alcoholused",
    "energydrinkused",
    "statenhancersused",
    "eastereggsfound",
    "eastereggsused",
    "virusescoded",
    "traveltimes",
    "timespenttraveling",
    "itemsboughtabroad",
    "attackswonabroad",
    "defendslostabroad",
    "argtravel",
    "mextravel",
    "uaetravel",
    "hawtravel",
    "japtravel",
    "uktravel",
    "satravel",
    "switravel",
    "chitravel",
    "cantravel",
    "caytravel",
    "drugsused",
    "overdosed",
    "rehabs",
    "rehabcost",
    "cantaken",
    "exttaken",
    "kettaken",
    "lsdtaken",
    "opitaken",
    "pcptaken",
    "shrtaken",
    "spetaken",
    "victaken",
    "xantaken",
    "missionscompleted",
    "contractscompleted",
    "dukecontractscompleted",
    "missioncreditsearned",
    "racingskill",
    "racingpointsearned",
    "racesentered",
    "raceswon",
    "networth",
    "timeplayed",
    "activestreak",
    "bestactivestreak",
    "awards",
    "refills",
    "nerverefills",
    "tokenrefills",
    "meritsbought",
    "daysbeendonator",
    "criminaloffenses",
    "vandalism",
    "theft",
    "counterfeiting",
    "fraud",
    "illicitservices",
    "cybercrime",
    "extortion",
    "illegalproduction",
    "currentkillstreak",
    "strength",
    "defense",
    "speed",
    "dexterity",
    "totalstats",
    "manuallabor",
    "intelligence",
    "endurance",
    "totalworkingstats",
    "moneyinvested",
    "investedprofit",
    "investamount",
    "banktimeleft",
    "stockprofits",
    "stocklosses",
    "stockfees",
    "stocknetprofits",
    "stockpayouts",
    "networthwallet",
    "networthvault",
    "networthbank",
    "networthcayman",
    "networthpoints",
    "networthitems",
    "networthdisplaycase",
    "networthbazaar",
    "networthitemmarket",
    "networthproperties",
    "networthstockmarket",
    "networthauctionhouse",
    "networthbookie",
    "networthcompany",
    "networthenlistedcars",
    "networthpiggybank",
    "networthpending",
    "networthloan",
    "networthunpaidfees",
    "huntingskill",
    "searchforcashskill",
    "bootleggingskill",
    "graffitiskill",
    "shopliftingskill",
    "pickpocketingskill",
    "cardskimmingskill",
    "burglaryskill",
    "hustlingskill",
    "disposalskill",
    "crackingskill",
    "forgeryskill",
    "scammingskill"
  ]

  @spec values() :: [t()]
  def values, do: @values

  @impl true
  def validate?(value), do: Enum.member?(@values, value)

  @impl true
  def parse(data) do
    if validate?(data) do
      data
    else
      Logger.warning("Invalid enum value #{inspect(data)} of PersonalStatsStatName")
      nil
    end
  end
end
